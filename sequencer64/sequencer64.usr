# Sequencer64 0.9.9.13 (and above) user configuration file
#
# Created by reading the following file and writing it out via the
# sequencer64 application:
#
# https://raw.githubusercontent.com/vext01/seq24/master/seq24usr.example
#
#  This is an example for a sequencer64.usr file. Edit and place in
#  your home directory. It allows you to give an alias to each
#  MIDI bus, MIDI channel, and MIDI control codes per channel.
#
#  1. Define your instruments and their control-code names,
#     if they have them.
#  2. Define a MIDI bus, its name, and what instruments are
#     on which channel.
#
# In the following MIDI buss definitions, channels are counted
# from 0 to 15, not 1 to 16.  Instruments unspecified are set to
# -1 (SEQ64_GM_INSTRUMENT_FLAG) and are GM (General MIDI).

[user-midi-bus-definitions]

6     # number of user-defined MIDI busses

[user-midi-bus-0]

# Device name for this buss:

Midi Through Port-0

# Number of channels:

1

# channel and instrument (or program) number

0 0

# End of buss definition 0

[user-midi-bus-1]

# Device name for this buss:

TiMidity port 0

# Number of channels:

1

# channel and instrument (or program) number

0 1

# End of buss definition 1

[user-midi-bus-2]

# Device name for this buss:

TiMidity port 1

# Number of channels:

1

# channel and instrument (or program) number

0 1

# End of buss definition 2

[user-midi-bus-3]

# Device name for this buss:

TiMidity port 2

# Number of channels:

1

# channel and instrument (or program) number

0 1

# End of buss definition 3

[user-midi-bus-4]

# Device name for this buss:

TiMidity port 3

# Number of channels:

1

# channel and instrument (or program) number

0 1

# End of buss definition 4

[user-midi-bus-5]

# Device name for this buss:

Yoshimi Port 0

# Number of channels:

1

# channel and instrument (or program) number

0 1

# End of buss definition 5
# In the following MIDI instrument definitions, active controller
# numbers (i.e. supported by the instrument) are paired with
# the (optional) name of the controller supported.

[user-instrument-definitions]

3     # instrument list count

[user-instrument-0]

# Name of instrument:

Midi Thru 0

# Number of MIDI controller values:

0

# controller number and (optional) name:


# End of instrument/controllers definition 0


[user-instrument-1]

# Name of instrument:

TiMidity

# Number of MIDI controller values:

0

# controller number and (optional) name:


# End of instrument/controllers definition 1


[user-instrument-2]

# Name of instrument:

Yoshimi

# Number of MIDI controller values:

0

# controller number and (optional) name:


# End of instrument/controllers definition 2

#   ======== Sequencer64-Specific Variables Section ========

[user-interface-settings]

# These settings specify the soon-to-be-modifiable configuration
# of some of the Sequencer64 user-interface elements.

# Specifies the style of the main-window grid of patterns.
#
# 0 = Normal style, matches the GTK theme, has brackets.
# 1 = White grid boxes that have brackets.
# 2 = Black grid boxes (no brackets).

2       # grid_style

# Specifies box style of an empty slot in the main-window grid.
#
# 0  = Draw a one-pixel box outline around the pattern slot.
# 1  = Draw brackets on the sides of the pattern slot.
# 2 to 30 = Make the brackets thicker and thicker.
# -1 = Same as 0, draw a box outline one-pixel thick.
# -2 to -30 = Draw a box outline, thicker and thicker.

3       # grid_brackets

# Specifies the number of rows in the main window.
# At present, only a value of 4 is supportable.
# In the future, we hope to support an alternate value of 8.

4       # mainwnd_rows

# Specifies the number of columns in the main window.
# At present, only a value of 8 is supportable.

8       # mainwnd_cols

# Specifies the maximum number of sets, which defaults to 1024.
# It is currently never necessary to change this value.

32      # max_sets

# Specifies the border width in the main window.

0      # mainwid_border

# Specifies the border spacing in the main window.

2      # mainwid_spacing

# Specifies some quantity, it is not known what it means.

0      # control_height

# Specifies the initial zoom for the piano rolls.  Ranges from 1.
# to 32, and defaults to 2 unless changed here.

2      # zoom

# Specifies if the key, scale, and background sequence are to be
# applied to all sequences, or to individual sequences.  The
# behavior of Seq24 was to apply them to all sequences.  But
# Sequencer64 takes it further by applying it immediately, and
# by saving to the end of the MIDI file.  Note that these three
# values are stored in the MIDI file, not this configuration file.
# Also note that reading MIDI files not created with this feature
# will pick up this feature if active, and the file gets saved.
# It is contagious.
#
# 0 = Allow each sequence to have its own key/scale/background.
#     Settings are saved with each sequence.
# 1 = Apply these settings globally (similar to seq24).
#     Settings are saved in the global final section of the file.

1      # global_seq_feature

# Specifies if the old, console-style font, or the new anti-
# aliased font, is to be used as the font throughout the GUI.
# In legacy mode, the old font is the default.
#
# 0 = Use the old-style font.
# 1 = Use the new-style font.

1      # use_new_font

# Specifies if the user-interface will support two song editor
# windows being shown at the same time.  This makes it easier to
# edit songs with a large number of sequences.
#
# 0 = Allow only one song editor (performance editor).
# 1 = Allow two song editors.

1      # allow_two_perfedits

# Specifies the number of 4-measure blocks for horizontal page
# scrolling in the song editor.  The old default, 1, is a bit
# small.  The new default is 4.  The legal range is 1 to 6, where
# 6 is the width of the whole performance piano roll view.

4      # perf_h_page_increment

# Specifies the number of 1-track blocks for vertical page
# scrolling in the song editor.  The old default, 1, is a bit
# small.  The new default is 8.  The legal range is 1 to 18, where
# 18 is about the height of the whole performance piano roll view.

8      # perf_v_page_increment

# Specifies if the progress bar is colored black, or a different
# color.  Currently, the different color is hardwired, and is
# red.  The other colors are washed out compared to red. Set this
# value to 1 to enable the feature, 0 to disable it.

1      # progress_bar_colored

# Specifies if the progress bar is thicker.  The default is 1
# pixel.  The 'thick' value is 2 pixels.  (More than that is not
# useful.  Set this value to 1 to enable the feature, 0 to disable
# it.

1      # progress_bar_thick

# Specifies the window redraw rate for all windows that support
# that concept.  The default is 40 ms.  Some windows used 25 ms.

40       # window_redraw_rate

[user-midi-settings]

# These settings specify MIDI-specific value that might be
# better off as variables, rather than constants.

# Specifies parts-per-quarter note to use, if the MIDI file.
# does not override it.  Default is 192, but we'd like to go
# higher than that.  BEWARE:  STILL GETTING IT TO WORK!

192       # midi_ppqn

# Specifies the default beats per measure, or beats per bar.
# The default value is 4.

4       # midi_beats_per_measure/bar

# Specifies the default beats per minute.  The default value
# is 120, and the legal range is 20 to 500.

120       # midi_beats_per_minute

# Specifies the default beat width. The default value is 4.

4       # midi_beat_width

# Specifies the buss-number override. The default value is -1,
# which means that there is no buss override.  If a value
# from 0 to 31 is given, then that buss value overrides all
# buss values specified in all sequences/patterns.
# Change this value from -1 only if you want to use a single
# output buss, either for testing or convenience.  And don't
# save the MIDI afterwards, unless you really want to change
# all of its buss values.

5       # midi_buss_override

# End of /home/ahlstrom/.config/sequencer64/sequencer64.usr
#
# vim: sw=4 ts=4 wm=4 et ft=sh
